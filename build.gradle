group 'com.thoughtworks.cornucopia'

apply plugin: 'jetty'
apply plugin: 'java'

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

jettyRun.contextPath = '/'

task stage {
    dependsOn build
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}


sourceSets {
    functionalTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'org.springframework:spring-webmvc:3.2.17.RELEASE'
    compile 'org.springframework:spring-jdbc:3.1.0.RELEASE'
    compile 'org.springframework.session:spring-session:1.2.0.RELEASE'
    compile 'org.mybatis:mybatis:3.2.1'
    compile 'org.springframework.security:spring-security-taglibs:3.1.3.RELEASE'
    compile 'org.springframework.security:spring-security-config:3.1.3.RELEASE'
    compile 'postgresql:postgresql:9.1-901.jdbc4'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.apache.httpcomponents:httpclient:4.2.1'
    testCompile 'org.springframework:spring-test:3.2.6.RELEASE'
    testCompile 'org.seleniumhq.selenium:selenium-java:2.53.1'
    testCompile 'com.github.detro:phantomjsdriver:1.2.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}



task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath + sourceSets.main.runtimeClasspath

    doFirst {
        jettyRun.daemon = true
        jettyRun.execute()
    }

    doLast {
        jettyStop.execute()
    }
}

build.dependsOn functionalTest
